fastlane_version '2.134.0'

platform :ios do
  before_all do
    ensure_git_status_clean
  end

  desc 'Fetch certificates and provisioning profiles'
  lane :certificates do
   sync_code_signing(app_identifier: 'com.thefinnternet.saywhat', type: 'development', readonly: true)
   sync_code_signing(app_identifier: 'com.thefinnternet.saywhat', type: 'appstore', readonly: true)
  end

  private_lane :bump_version do
    build_number = get_build_number(xcodeproj: "./ios/saywhat.xcodeproj")
    version_number = increment_version_number(bump_type: "major", xcodeproj: "./ios/saywhat.xcodeproj")  
    version_build = "v#{version_number}-#{build_number}"
    add_git_tag(tag: "testflight-#{build_number}")
  end

  desc 'Codepush to iOS beta'
  lane :codepush_beta do
    Dir.chdir("..") do
      sh("appcenter codepush release-react -a thefinnomenon/SayWhat-iOS")
    end
  end

  desc 'Build and push a new beta build to Testflight'
  lane :beta do
    sync_code_signing(app_identifier: 'com.thefinnternet.saywhat', type: 'appstore', readonly: true)
    cocoapods(podfile: './ios/')
    build_number = increment_build_number(xcodeproj: './ios/saywhat.xcodeproj')
    add_badge
    build_app(scheme: 'saywhat', workspace: "./ios/saywhat.xcworkspace", configuration: "Staging", clean: true,  output_directory: "./fastlane/build")
    upload_to_testflight(
      beta_app_description: "This is a description of my app",
      demo_account_required: false,
      notify_external_testers: true,
      distribute_external: false,
      beta_app_review_info: {
        contact_email: "chris@finn.com",
        contact_first_name: "Chris",
        contact_last_name: "Finn",
        contact_phone: "7817891371"
      },
    )
    # This is needed to undo the badge changes to the app icons
    reset_git_repo(
      force: true,
      files: [
        "./ios/saywhat/Images.xcassets/AppIcon.appiconset/"
      ]
    )
    commit_version_bump(message: "Build version bump by fastlane [#{build_number}] [skip ci]", xcodeproj: "./ios/saywhat.xcodeproj")
    add_git_tag(tag: "testflight-#{build_number}")
    push_to_git_remote
  end

  desc 'Take screenshots for iOS app'
  lane :screenshots do
    capture_screenshots
  end

  desc 'Codepush to release app'
  lane :codepush_release do
    Dir.chdir("..") do
      sh("appcenter codepush promote -a thefinnomenon/SayWhat-iOS")
    end
  end

  desc 'Build and push a new release build to the App Store'
  lane :release do
    sync_code_signing(app_identifier: 'com.thefinnternet.saywhat', type: 'appstore', readonly: true)
    cocoapods(podfile: './ios/')
    build_number = increment_build_number(xcodeproj: './ios/saywhat.xcodeproj')
    #capture_screenshots
    build_app(scheme: 'saywhat', workspace: "./ios/saywhat.xcworkspace", configuration: "Release", clean: true,  output_directory: "./fastlane/build")
    upload_to_app_store
    commit_version_bump(message: "Build version bump by fastlane [#{build_number}] [skip ci]", xcodeproj: "./ios/saywhat.xcodeproj")
    add_git_tag(tag: "release-#{build_number}")
    push_to_git_remote
  end
end

platform :android do
  before_all do
    ensure_git_status_clean
  end

  lane :test do
    gradle(task: "test", project_dir: "./android/")
  end

  lane :beta do
    # Adjust the `build_type` and `flavor` params as needed to build the right APK for your setup
    gradle(
      task: "assemble",
      build_type: "Release",
      project_dir: "./android/"
    )

    # ...
  end
end

#error do |lane, exception|
#end

# This lane is called, only if the executed lane was successful
#after_all do
#end
