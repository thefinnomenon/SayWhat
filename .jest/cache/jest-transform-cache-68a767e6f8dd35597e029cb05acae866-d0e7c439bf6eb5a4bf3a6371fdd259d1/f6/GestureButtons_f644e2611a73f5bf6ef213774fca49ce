7f3800fb22c06ce97ad7092b252d91e4
"use strict";Object.defineProperty(exports, "__esModule", { value: true });Object.defineProperty(exports, "PureNativeButton", { enumerable: true, get: function get() {return _GestureHandlerButton.default;} });exports.BorderlessButton = exports.RectButton = exports.BaseButton = exports.RawButton = void 0;var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");

var _createNativeWrapper = _interopRequireDefault(require("./createNativeWrapper"));
var _GestureHandlerButton = _interopRequireDefault(require("./GestureHandlerButton"));
var _State = _interopRequireDefault(require("./State"));var _jsxFileName = "/Users/finn/Dev/Projects/Active/SayWhat/saywhat/node_modules/react-native-gesture-handler/GestureButtons.js";function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(source, true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(source).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}function _objectWithoutProperties(source, excluded) {if (source == null) return {};var target = _objectWithoutPropertiesLoose(source, excluded);var key, i;if (Object.getOwnPropertySymbols) {var sourceSymbolKeys = Object.getOwnPropertySymbols(source);for (i = 0; i < sourceSymbolKeys.length; i++) {key = sourceSymbolKeys[i];if (excluded.indexOf(key) >= 0) continue;if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;target[key] = source[key];}}return target;}function _objectWithoutPropertiesLoose(source, excluded) {if (source == null) return {};var target = {};var sourceKeys = Object.keys(source);var key, i;for (i = 0; i < sourceKeys.length; i++) {key = sourceKeys[i];if (excluded.indexOf(key) >= 0) continue;target[key] = source[key];}return target;}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}

var RawButton = (0, _createNativeWrapper.default)(_GestureHandlerButton.default, {
  shouldCancelWhenOutside: false,
  shouldActivateOnStart: false });exports.RawButton = RawButton;var




BaseButton = function (_React$Component) {_inherits(BaseButton, _React$Component);






  function BaseButton(props) {var _this;_classCallCheck(this, BaseButton);
    _this = _possibleConstructorReturn(this, _getPrototypeOf(BaseButton).call(this, props));_this.



    _handleEvent = function (_ref) {var nativeEvent = _ref.nativeEvent;var
      state = nativeEvent.state,oldState = nativeEvent.oldState,pointerInside = nativeEvent.pointerInside;
      var active = pointerInside && state === _State.default.ACTIVE;

      if (active !== _this._lastActive && _this.props.onActiveStateChange) {
        _this.props.onActiveStateChange(active);
      }

      if (
      oldState === _State.default.ACTIVE &&
      state !== _State.default.CANCELLED &&
      _this._lastActive &&
      _this.props.onPress)
      {
        _this.props.onPress(active);
      }

      _this._lastActive = active;
    };_this.





    _onHandlerStateChange = function (e) {
      _this.props.onHandlerStateChange && _this.props.onHandlerStateChange(e);
      _this._handleEvent(e);
    };_this.

    _onGestureEvent = function (e) {
      _this.props.onGestureEvent && _this.props.onGestureEvent(e);
      _this._handleEvent(e);
    };_this._lastActive = false;return _this;}_createClass(BaseButton, [{ key: "render", value: function render()

    {var _this$props =
      this.props,style = _this$props.style,rippleColor = _this$props.rippleColor,rest = _objectWithoutProperties(_this$props, ["style", "rippleColor"]);

      return (
        _react.default.createElement(RawButton, _extends({
          style: [{ overflow: 'hidden' }, style],
          rippleColor: (0, _reactNative.processColor)(rippleColor) },
        rest, {
          onGestureEvent: this._onGestureEvent,
          onHandlerStateChange: this._onHandlerStateChange, __source: { fileName: _jsxFileName, lineNumber: 66 } })));


    } }]);return BaseButton;}(_react.default.Component);exports.BaseButton = BaseButton;BaseButton.propTypes = _objectSpread({}, RawButton.propTypes, { onPress: _propTypes.default.func, onActiveStateChange: _propTypes.default.func });


var AnimatedBaseButton = _reactNative.Animated.createAnimatedComponent(BaseButton);

var btnStyles = _reactNative.StyleSheet.create({
  underlay: {
    position: 'absolute',
    left: 0,
    right: 0,
    bottom: 0,
    top: 0 } });var



RectButton = function (_React$Component2) {_inherits(RectButton, _React$Component2);







  function RectButton(props) {var _this2;_classCallCheck(this, RectButton);
    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(RectButton).call(this, props));_this2.



    _onActiveStateChange = function (active) {
      if (_reactNative.Platform.OS !== 'android') {
        _this2._opacity.setValue(active ? _this2.props.activeOpacity : 0);
      }

      _this2.props.onActiveStateChange && _this2.props.onActiveStateChange(active);
    };_this2._opacity = new _reactNative.Animated.Value(0);return _this2;}_createClass(RectButton, [{ key: "render", value: function render()

    {var _this$props2 =
      this.props,children = _this$props2.children,rest = _objectWithoutProperties(_this$props2, ["children"]);

      return (
        _react.default.createElement(BaseButton, _extends({}, rest, { onActiveStateChange: this._onActiveStateChange, __source: { fileName: _jsxFileName, lineNumber: 114 } }),
        _react.default.createElement(_reactNative.Animated.View, {
          style: [
          btnStyles.underlay,
          { opacity: this._opacity },
          { backgroundColor: this.props.underlayColor }], __source: { fileName: _jsxFileName, lineNumber: 115 } }),


        children));


    } }]);return RectButton;}(_react.default.Component);exports.RectButton = RectButton;RectButton.propTypes = BaseButton.propTypes;RectButton.defaultProps = { activeOpacity: 0.105, underlayColor: 'black' };var


BorderlessButton = function (_React$Component3) {_inherits(BorderlessButton, _React$Component3);










  function BorderlessButton(props) {var _this3;_classCallCheck(this, BorderlessButton);
    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(BorderlessButton).call(this, props));_this3.



    _onActiveStateChange = function (active) {
      if (_reactNative.Platform.OS !== 'android') {
        _this3._opacity.setValue(active ? _this3.props.activeOpacity : 1);
      }

      _this3.props.onActiveStateChange && _this3.props.onActiveStateChange(active);
    };_this3._opacity = new _reactNative.Animated.Value(1);return _this3;}_createClass(BorderlessButton, [{ key: "render", value: function render()

    {var _this$props3 =
      this.props,children = _this$props3.children,style = _this$props3.style,rest = _objectWithoutProperties(_this$props3, ["children", "style"]);

      return (
        _react.default.createElement(AnimatedBaseButton, _extends({},
        rest, {
          onActiveStateChange: this._onActiveStateChange,
          style: [style, _reactNative.Platform.OS === 'ios' && { opacity: this._opacity }], __source: { fileName: _jsxFileName, lineNumber: 156 } }),
        children));


    } }]);return BorderlessButton;}(_react.default.Component);exports.BorderlessButton = BorderlessButton;BorderlessButton.propTypes = _objectSpread({}, BaseButton.propTypes, { borderless: _propTypes.default.bool });BorderlessButton.defaultProps = { activeOpacity: 0.3, borderless: true };